// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.12.0+8c27801dc8d42ccc00997f25c0b8f45f8d4a233e
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Confluent.Kafka.Examples.AvroSpecific
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.12.0+8c27801dc8d42ccc00997f25c0b8f45f8d4a233e")]
	public partial class Complex : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""Complex"",""namespace"":""Confluent.Kafka.Examples.AvroSpecific"",""fields"":[{""name"":""arrayField"",""type"":{""type"":""array"",""items"":""string""}},{""name"":""mapField"",""type"":{""type"":""map"",""values"":""string""}},{""name"":""unionField"",""type"":[""null"",""string""],""confluent:tags"":[""PII""]}]}");
		private IList<System.String> _arrayField;
		private IDictionary<string,System.String> _mapField;
		private string _unionField;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return Complex._SCHEMA;
			}
		}
		public IList<System.String> arrayField
		{
			get
			{
				return this._arrayField;
			}
			set
			{
				this._arrayField = value;
			}
		}
		public IDictionary<string,System.String> mapField
		{
			get
			{
				return this._mapField;
			}
			set
			{
				this._mapField = value;
			}
		}
		public string unionField
		{
			get
			{
				return this._unionField;
			}
			set
			{
				this._unionField = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.arrayField;
			case 1: return this.mapField;
			case 2: return this.unionField;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.arrayField = (IList<System.String>)fieldValue; break;
			case 1: this.mapField = (IDictionary<string,System.String>)fieldValue; break;
			case 2: this.unionField = (System.String)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}

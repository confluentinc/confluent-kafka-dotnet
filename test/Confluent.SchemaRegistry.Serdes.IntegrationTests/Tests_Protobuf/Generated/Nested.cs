// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Nested.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Confluent.Kafka.Examples.Protobuf {

  /// <summary>Holder for reflection information generated from Nested.proto</summary>
  public static partial class NestedReflection {

    #region Descriptor
    /// <summary>File descriptor for Nested.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NestedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxOZXN0ZWQucHJvdG8SIWNvbmZsdWVudC5rYWZrYS5leGFtcGxlcy5wcm90",
            "b2J1ZiIYCgZPdXRlcjESDgoGRmllbGRBGAEgASgJIhgKBk91dGVyMhIOCgZG",
            "aWVsZEIYASABKAki0AEKC05lc3RlZE91dGVyEg4KBkZpZWxkNBgBIAEoCRoc",
            "CgpOZXN0ZWRNaWQxEg4KBkZpZWxkMRgBIAEoCRqSAQoKTmVzdGVkTWlkMhIO",
            "CgZGaWVsZDMYASABKAkSVQoGRmllbGQ0GAIgASgLMkUuY29uZmx1ZW50Lmth",
            "ZmthLmV4YW1wbGVzLnByb3RvYnVmLk5lc3RlZE91dGVyLk5lc3RlZE1pZDIu",
            "TmVzdGVkTG93ZXIaHQoLTmVzdGVkTG93ZXISDgoGRmllbGQyGAEgASgJIhgK",
            "Bk91dGVyMxIOCgZGaWVsZEMYASABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Confluent.Kafka.Examples.Protobuf.Outer1), global::Confluent.Kafka.Examples.Protobuf.Outer1.Parser, new[]{ "FieldA" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Confluent.Kafka.Examples.Protobuf.Outer2), global::Confluent.Kafka.Examples.Protobuf.Outer2.Parser, new[]{ "FieldB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Confluent.Kafka.Examples.Protobuf.NestedOuter), global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Parser, new[]{ "Field4" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Types.NestedMid1), global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Types.NestedMid1.Parser, new[]{ "Field1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Types.NestedMid2), global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Types.NestedMid2.Parser, new[]{ "Field3", "Field4" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Types.NestedMid2.Types.NestedLower), global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Types.NestedMid2.Types.NestedLower.Parser, new[]{ "Field2" }, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Confluent.Kafka.Examples.Protobuf.Outer3), global::Confluent.Kafka.Examples.Protobuf.Outer3.Parser, new[]{ "FieldC" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Outer1 : pb::IMessage<Outer1> {
    private static readonly pb::MessageParser<Outer1> _parser = new pb::MessageParser<Outer1>(() => new Outer1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Outer1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Confluent.Kafka.Examples.Protobuf.NestedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outer1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outer1(Outer1 other) : this() {
      fieldA_ = other.fieldA_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outer1 Clone() {
      return new Outer1(this);
    }

    /// <summary>Field number for the "FieldA" field.</summary>
    public const int FieldAFieldNumber = 1;
    private string fieldA_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldA {
      get { return fieldA_; }
      set {
        fieldA_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Outer1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Outer1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldA != other.FieldA) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldA.Length != 0) hash ^= FieldA.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FieldA.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldA);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldA.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldA);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Outer1 other) {
      if (other == null) {
        return;
      }
      if (other.FieldA.Length != 0) {
        FieldA = other.FieldA;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldA = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Outer2 : pb::IMessage<Outer2> {
    private static readonly pb::MessageParser<Outer2> _parser = new pb::MessageParser<Outer2>(() => new Outer2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Outer2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Confluent.Kafka.Examples.Protobuf.NestedReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outer2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outer2(Outer2 other) : this() {
      fieldB_ = other.fieldB_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outer2 Clone() {
      return new Outer2(this);
    }

    /// <summary>Field number for the "FieldB" field.</summary>
    public const int FieldBFieldNumber = 1;
    private string fieldB_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldB {
      get { return fieldB_; }
      set {
        fieldB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Outer2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Outer2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldB != other.FieldB) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldB.Length != 0) hash ^= FieldB.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FieldB.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldB);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Outer2 other) {
      if (other == null) {
        return;
      }
      if (other.FieldB.Length != 0) {
        FieldB = other.FieldB;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldB = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NestedOuter : pb::IMessage<NestedOuter> {
    private static readonly pb::MessageParser<NestedOuter> _parser = new pb::MessageParser<NestedOuter>(() => new NestedOuter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NestedOuter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Confluent.Kafka.Examples.Protobuf.NestedReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NestedOuter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NestedOuter(NestedOuter other) : this() {
      field4_ = other.field4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NestedOuter Clone() {
      return new NestedOuter(this);
    }

    /// <summary>Field number for the "Field4" field.</summary>
    public const int Field4FieldNumber = 1;
    private string field4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Field4 {
      get { return field4_; }
      set {
        field4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NestedOuter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NestedOuter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Field4 != other.Field4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Field4.Length != 0) hash ^= Field4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Field4.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Field4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Field4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Field4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NestedOuter other) {
      if (other == null) {
        return;
      }
      if (other.Field4.Length != 0) {
        Field4 = other.Field4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Field4 = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NestedOuter message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class NestedMid1 : pb::IMessage<NestedMid1> {
        private static readonly pb::MessageParser<NestedMid1> _parser = new pb::MessageParser<NestedMid1>(() => new NestedMid1());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NestedMid1> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NestedMid1() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NestedMid1(NestedMid1 other) : this() {
          field1_ = other.field1_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NestedMid1 Clone() {
          return new NestedMid1(this);
        }

        /// <summary>Field number for the "Field1" field.</summary>
        public const int Field1FieldNumber = 1;
        private string field1_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Field1 {
          get { return field1_; }
          set {
            field1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NestedMid1);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NestedMid1 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Field1 != other.Field1) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Field1.Length != 0) hash ^= Field1.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Field1.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Field1);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Field1.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Field1);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NestedMid1 other) {
          if (other == null) {
            return;
          }
          if (other.Field1.Length != 0) {
            Field1 = other.Field1;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Field1 = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class NestedMid2 : pb::IMessage<NestedMid2> {
        private static readonly pb::MessageParser<NestedMid2> _parser = new pb::MessageParser<NestedMid2>(() => new NestedMid2());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NestedMid2> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NestedMid2() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NestedMid2(NestedMid2 other) : this() {
          field3_ = other.field3_;
          field4_ = other.field4_ != null ? other.field4_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NestedMid2 Clone() {
          return new NestedMid2(this);
        }

        /// <summary>Field number for the "Field3" field.</summary>
        public const int Field3FieldNumber = 1;
        private string field3_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Field3 {
          get { return field3_; }
          set {
            field3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Field4" field.</summary>
        public const int Field4FieldNumber = 2;
        private global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Types.NestedMid2.Types.NestedLower field4_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Types.NestedMid2.Types.NestedLower Field4 {
          get { return field4_; }
          set {
            field4_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NestedMid2);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NestedMid2 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Field3 != other.Field3) return false;
          if (!object.Equals(Field4, other.Field4)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Field3.Length != 0) hash ^= Field3.GetHashCode();
          if (field4_ != null) hash ^= Field4.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Field3.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Field3);
          }
          if (field4_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Field4);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Field3.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Field3);
          }
          if (field4_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field4);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NestedMid2 other) {
          if (other == null) {
            return;
          }
          if (other.Field3.Length != 0) {
            Field3 = other.Field3;
          }
          if (other.field4_ != null) {
            if (field4_ == null) {
              field4_ = new global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Types.NestedMid2.Types.NestedLower();
            }
            Field4.MergeFrom(other.Field4);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Field3 = input.ReadString();
                break;
              }
              case 18: {
                if (field4_ == null) {
                  field4_ = new global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Types.NestedMid2.Types.NestedLower();
                }
                input.ReadMessage(field4_);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the NestedMid2 message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class NestedLower : pb::IMessage<NestedLower> {
            private static readonly pb::MessageParser<NestedLower> _parser = new pb::MessageParser<NestedLower>(() => new NestedLower());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<NestedLower> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Confluent.Kafka.Examples.Protobuf.NestedOuter.Types.NestedMid2.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NestedLower() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NestedLower(NestedLower other) : this() {
              field2_ = other.field2_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NestedLower Clone() {
              return new NestedLower(this);
            }

            /// <summary>Field number for the "Field2" field.</summary>
            public const int Field2FieldNumber = 1;
            private string field2_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Field2 {
              get { return field2_; }
              set {
                field2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as NestedLower);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(NestedLower other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Field2 != other.Field2) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Field2.Length != 0) hash ^= Field2.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Field2.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Field2);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Field2.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Field2);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(NestedLower other) {
              if (other == null) {
                return;
              }
              if (other.Field2.Length != 0) {
                Field2 = other.Field2;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Field2 = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class Outer3 : pb::IMessage<Outer3> {
    private static readonly pb::MessageParser<Outer3> _parser = new pb::MessageParser<Outer3>(() => new Outer3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Outer3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Confluent.Kafka.Examples.Protobuf.NestedReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outer3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outer3(Outer3 other) : this() {
      fieldC_ = other.fieldC_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outer3 Clone() {
      return new Outer3(this);
    }

    /// <summary>Field number for the "FieldC" field.</summary>
    public const int FieldCFieldNumber = 1;
    private string fieldC_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldC {
      get { return fieldC_; }
      set {
        fieldC_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Outer3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Outer3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldC != other.FieldC) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldC.Length != 0) hash ^= FieldC.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FieldC.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldC.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldC);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Outer3 other) {
      if (other == null) {
        return;
      }
      if (other.FieldC.Length != 0) {
        FieldC = other.FieldC;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldC = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

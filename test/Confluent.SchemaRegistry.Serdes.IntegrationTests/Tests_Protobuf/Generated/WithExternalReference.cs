// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WithExternalReference.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from WithExternalReference.proto</summary>
public static partial class WithExternalReferenceReflection {

  #region Descriptor
  /// <summary>File descriptor for WithExternalReference.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static WithExternalReferenceReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChtXaXRoRXh0ZXJuYWxSZWZlcmVuY2UucHJvdG8aElJlZkJ5QW5vdGhlci5w",
          "cm90byJGChVXaXRoRXh0ZXJuYWxSZWZlcmVuY2USHQoGdmFsdWUxGAEgASgL",
          "Mg0uUmVmQnlBbm90aGVyEg4KBnZhbHVlMhgCIAEoDUIuCixpby5jb25mbHVl",
          "bnQua2Fma2Euc2VyaWFsaXplcnMucHJvdG9idWYudGVzdGIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::RefByAnotherReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::WithExternalReference), global::WithExternalReference.Parser, new[]{ "Value1", "Value2" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class WithExternalReference : pb::IMessage<WithExternalReference> {
  private static readonly pb::MessageParser<WithExternalReference> _parser = new pb::MessageParser<WithExternalReference>(() => new WithExternalReference());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WithExternalReference> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WithExternalReferenceReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WithExternalReference() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WithExternalReference(WithExternalReference other) : this() {
    value1_ = other.value1_ != null ? other.value1_.Clone() : null;
    value2_ = other.value2_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WithExternalReference Clone() {
    return new WithExternalReference(this);
  }

  /// <summary>Field number for the "value1" field.</summary>
  public const int Value1FieldNumber = 1;
  private global::RefByAnother value1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RefByAnother Value1 {
    get { return value1_; }
    set {
      value1_ = value;
    }
  }

  /// <summary>Field number for the "value2" field.</summary>
  public const int Value2FieldNumber = 2;
  private uint value2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Value2 {
    get { return value2_; }
    set {
      value2_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WithExternalReference);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WithExternalReference other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Value1, other.Value1)) return false;
    if (Value2 != other.Value2) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (value1_ != null) hash ^= Value1.GetHashCode();
    if (Value2 != 0) hash ^= Value2.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (value1_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Value1);
    }
    if (Value2 != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Value2);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (value1_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value1);
    }
    if (Value2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Value2);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WithExternalReference other) {
    if (other == null) {
      return;
    }
    if (other.value1_ != null) {
      if (value1_ == null) {
        value1_ = new global::RefByAnother();
      }
      Value1.MergeFrom(other.Value1);
    }
    if (other.Value2 != 0) {
      Value2 = other.Value2;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (value1_ == null) {
            value1_ = new global::RefByAnother();
          }
          input.ReadMessage(value1_);
          break;
        }
        case 16: {
          Value2 = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code

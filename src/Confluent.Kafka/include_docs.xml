<API>  

<Member name="ISerializer_Configure">  
    <summary>
        Configure the serializer using relevant configuration parameter(s) in <paramref name="config" /> (if present)
    </summary>
    <param name="config">
        A collection containing configuration parameter(s) relevant to this serializer.
    </param>
    <param name="isKey">
        true: if this serializer instance is used to serialize keys,
        false: if this serializer instance is used to serialize values.
    </param>
    <returns>
        A configuration collection with configuration parameter(s) relevant to this serializer removed.
    </returns>
</Member>  

<Member name="IDeserializer_Configure">
    <summary>
        Configure the deserializer using relevant configuration parameter(s) in <paramref name="config" /> (if present).
    </summary>
    <param name="config">
        A collection containing configuration parameter(s) relevant to this deserializer.
    </param>
    <param name="isKey">
        true: if this deserializer instance is used to serialize keys,
        false: if this deserializer instance is used to serialize values.
    </param>
    <returns>
        A configuration collection with configuration parameter(s) relevant to this deserializer removed.
    </returns>
</Member>

<Member name="Consumer_OffsetsForTimes">
    <summary>
        Look up the offsets for the given partitions by timestamp. The returned offset for each partition is the
        earliest offset whose timestamp is greater than or equal to the given timestamp in the corresponding partition.
    </summary>
    <remarks>
        This is a blocking call. The consumer does not have to be assigned the partitions.
        If the message format version in a partition is before 0.10.0, i.e. the messages do not have timestamps, null
        will be returned for that partition.
        Note that this method may block indefinitely if the partition does not exist.
    </remarks>
    <param name="timestampsToSearch">
        The mapping from partition to the timestamp to look up.
    </param>
    <param name="timeout">
        The maximum period of time the call may block.
    </param>
    <returns>
       A mapping from partition to the timestamp and offset of the first message with timestamp greater
       than or equal to the target timestamp. null will be returned for the partition if there is no such message.
    </returns>
</Member>

<Member name="Consumer_Pause">
    <summary>
        Pause consumption for the provided list of partitions.
    </summary>
    <param name="partitions">
        The partitions to pause consumption of.
    </param>
    <returns>
        Per partition success or error.
    </returns>
</Member>

<Member name="Consumer_Resume">
    <summary>
        Resume consumption for the provided list of partitions.
    </summary>
    <param name="partitions">
        The partitions to resume consumption of.
    </param>
    <returns>
        Per partition success or error.
    </returns>
</Member>
  
<Member name="Store_Offsets">
    <summary>
        Store offsets for one or more partitions. 
        
        The offset will be committed (written) to the offset store according
        to `auto.commit.interval.ms` or manual offset-less commit().
    </summary>
    <remarks>
        `enable.auto.offset.store` must be set to "false" when using this API.
    </remarks>
    <param name="offsets">
        List of offsets to be commited.
    </param>
    <returns>
        For each topic/partition returns current stored offset
        or a partition specific error.
    </returns>
</Member>

<Member name="Consumer_Seek">
    <summary>
        Seek consumer for topic+partition to <parmref name="offset"/> which is either an
        absolute or logical offset. This must only be done for partitions that are 
        currently being consumed (i.e., have been Assign()ed). To set the start offset for 
        not-yet-consumed partitions you should use the 
        <see cref="Confluent.Kafka.Consumer.Assign(IEnumerable{TopicPartitionOffset})" /> 
        method instead.
    </summary>
    <param name="tpo">
        The topic/partition to seek on and the offset to seek to.
    </param>
</Member>

</API>  

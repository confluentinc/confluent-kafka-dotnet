using System.Collections.Generic;

namespace RdKafka
{
    public struct Metadata
    {
        public List<BrokerMetadata> Brokers { get; set; }
        public List<TopicMetadata> Topics { get; set; }
        public int OriginatingBrokerId { get; set; }
        public string OriginatingBrokerName { get; set; }
    }

    public struct BrokerMetadata
    {
        public int BrokerId { get; set; }
        public string Host { get; set; }
        public int Port { get; set; }
    }

    public struct PartitionMetadata
    {
        public int PartitionId { get; set; }
        public int Leader { get; set; }
        public int[] Replicas { get; set; }
        public int[] InSyncReplicas { get; set; }
        public ErrorCode Error { get; set; }
    }

    public struct TopicMetadata
    {
        public string Topic { get; set; }
        public List<PartitionMetadata> Partitions { get; set; }
        public ErrorCode Error { get; set; }
    }

    public struct TopicPartition
    {
        public TopicPartition(string topic, int partition)
        {
            Topic = topic;
            Partition = partition;
        }

        public string Topic { get; set; }
        public int Partition { get; set; }

        public override string ToString() => Topic + " " + Partition;
    }

    public struct TopicPartitionOffset
    {
        public TopicPartitionOffset(string topic, int partition, long offset)
        {
            Topic = topic;
            Partition = partition;
            Offset = offset;
        }

        public string Topic { get; set; }
        public int Partition { get; set; }
        public long Offset { get; set; }

        public override string ToString() => Topic + " " + Partition + " " + Offset;
    }

    public struct Offsets
    {
        public long Low { get; set; }
        public long High { get; set; }
    }

    public struct GroupInfo
    {
        public BrokerMetadata Broker { get; set; } /**< Originating broker info */
        public string Group { get; set; }          /**< Group name */
        public ErrorCode Error { get; set; }       /**< Broker-originated error */
        public string State { get; set; }          /**< Group state */
        public string ProtocolType { get; set; }   /**< Group protocol type */
        public string Protocol { get; set; }       /**< Group protocol */
        public List<GroupMemberInfo> Members { get; set; } /**< Group members */
    }

    public struct GroupMemberInfo {
        public string MemberId { get; set; }            /**< Member id (generated by broker) */
        public string ClientId { get; set; }            /**< Client's \p client.id */
        public string ClientHost { get; set; }          /**< Client's hostname */
        public byte[] MemberMetadata { get; set; }      /**< Member metadata (binary),
                                                         *   format depends on \p protocol_type. */
        public byte[] MemberAssignment { get; set; }    /**< Member assignment (binary),
                                                         *   format depends on \p protocol_type. */
    }
}
